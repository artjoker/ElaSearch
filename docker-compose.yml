version: '3.2'

networks:
  elastic:
    external: true
  traefik:
    external: true

volumes:
  db-data:
  elasticsearch-data:

services:

  queue:
    # image: 'artjoker/8.1:php-dev'
    image: 'artjoker/php:8.2-dev'
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './:/app'
    env_file:
      - .env
    command: 'php /app/artisan queue:work'
    depends_on:
      - redis
      - mysql
    networks:
      - traefik

  cron:
    # image: 'artjoker/8.1:php-dev'
    image: 'artjoker/php:8.2-dev'
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './:/app'
    env_file:
      - .env
    command: /usr/local/bin/supercronic /usr/cron/cron.conf
    depends_on:
      - redis
      - mysql
    networks:
      - traefik

  php:
    # image: 'artjoker/8.1:php-dev'
    image: 'artjoker/php:8.2-dev'
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    volumes:
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './:/app'
      - '/tmp/cache/:/tmp/cache/'
      # - ./docker/php.ini:/usr/local/etc/php/php.ini
    env_file:
      - .env
    command: php-fpm --nodaemonize -d "opcache.enable=0" -d "display_startup_errors=On" -d "display_errors=On" -d "error_reporting=E_ALL" -R
    depends_on:
      - redis
      - mysql
    networks:
      - traefik

  node:
    image: 'artjoker/7.4:node'
    user: '${USER_ID:-1000}:${GROUP_ID:-1000}'
    restart: on-failure
    command: /start.sh
    volumes:
      - '/etc/passwd:/etc/passwd:ro'
      - '/etc/group:/etc/group:ro'
      - './:/app'
    working_dir: /app
    networks:
      - traefik

  web:
    image: 'artjoker/7.4:nginx'
    restart: on-failure
    volumes:
      - './:/app:ro'
    env_file:
      - .env
    depends_on:
      - php
    ports:
      - '80:80'
    networks:
      - traefik

  redis:
    image: redis:alpine
    restart: on-failure
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 3s
      retries: 5
    networks:
      - traefik


  # db:
  #   image: postgres:14-alpine
  #   restart: on-failure
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -U postgres" ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_DB=laravel
  #     - POSTGRES_HOST=db
  #   volumes:
  #     - "./docker/backup:/backup"
  #     - db-data:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - backend-network

  mysql:
    image: 'mysql:8.0'
    restart: on-failure
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: root
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - './volumes/db-data:/var/lib/mysql'
    ports:
      - '3306:3306'
    networks:
      - traefik
  es1:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    container_name: es1
    restart: always
    environment:
      - node.name=es1
      - discovery.type=single-node
      - network.host=0.0.0.0
      #Dejavu UI
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE
      - http.cors.allow-credentials=true
      - cluster.name=es-cluster
      - ELASTIC_PASSWORD=meganote
      #- discovery.seed_hosts=es02,es03
      #- cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - xpack.license.self_generated.type=basic
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enabled=false
      - action.destructive_requires_name=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    deploy:
      resources:
        limits:
          cpus: "2"  # Use at most 50% of one CPU core
          memory: 2G  # Use at most 2G of RAM
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nproc:
        soft: 65535
        hard: 65536
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch-data:/var/lib/elasticsearch/data
    expose:
      - 9200
    #ports:
    #  - "9200:9200"
    #  - "9300:9300"
    networks:
      elastic:
        aliases: [ "elasticsearch-prod" ]
      traefik:
  kibana:
    container_name: kibana
    restart: always
    image: docker.elastic.co/kibana/kibana:7.17.1
    ports:
      - 5601:5601
    volumes:
      #      - kibanadata:/usr/share/kibana/data
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      elastic:
      traefik:
    depends_on:
      - es1